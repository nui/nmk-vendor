#!/usr/bin/env zsh

# Parse options {{{
usage() {
cat <<- EOU
Usage: $_SCRIPT_NAME [OPTIONS]

optional arguments:
  -h, --help            print this help message
  -n, --name            custom tar name
EOU
}

getopt_options=(
    help
    name:
)

if ! getopt_tmp=$(POSIXLY_CORRECT=true getopt -q -o hn: --long ${(j:,:)getopt_options} -- "$@"); then
    # exit if error
    usage
    exit 1
fi

eval set -- $getopt_tmp
unset getopt_options
unset getopt_tmp

# Variables
local _NAME

while true; do
    case $1 in
        -h | --help ) usage; exit 0 ;;
        -n | --name ) _NAME=$2; shift 2;;
        -- ) shift; break ;;
    esac
done
# }}}

set -ex

DOT_LOCAL=$1
shift

CANT_COMPILE_HTOP=(centos-6.6 centos-6.7 centos-6.8 centos-6.9 centos-6.10)

for tag in $@; do
    IMAGE=nuimk/nmkpkg:$tag
    if [[ -n $_NAME ]]; then
        TAR=$_NAME.tar
    else
        NAME=${DOT_LOCAL:h:h:t}
        TAR=nmkpkg-$tag-$NAME.tar
    fi
    if [[ ${CANT_COMPILE_HTOP[(r)$tag]} == $tag ]]; then
        OPTIONS=(--no-htop)
    else
        OPTIONS=
    fi
    CID=$(docker run -d $IMAGE $OPTIONS $DOT_LOCAL)
    docker wait $CID
    docker cp $CID:/local.tar $TAR
    gzip $TAR
    docker rm $CID
    [[ -n $_NAME ]] && exit 0
done

