#!/bin/zsh
cd ${0:A:h}

build_context() {
local distro=$1
local version=$2

local libevent_version=2.1.12
local htop_version=3.3.0

local tmux_tag=3.4-5
local zsh_version=5.9

local tag=$distro-$version

local libevent_archive=libevent-${libevent_version}-stable.tar.gz
local tmux_archive=tmux-${tmux_tag}.tar.gz
local zsh_archive=zsh-${zsh_version}.tar.gz
local htop_archive=htop-${htop_version}.tar.gz

cat << EOF

ADD *.sha256 /build/
WORKDIR /build
ENV LIBEVENT_BUILD_DIR=libevent-${libevent_version}-stable \\
    TMUX_BUILD_DIR=tmux-${tmux_tag} \\
    ZSH_BUILD_DIR=zsh-zsh-${zsh_version} \\
    HTOP_BUILD_DIR=htop-${htop_version}

RUN curl -o ${libevent_archive} -sSL "https://github.com/libevent/libevent/releases/download/release-${libevent_version}-stable/${libevent_archive}" \\
    && sha256sum -c ${libevent_archive}.sha256 \\
    && tar -xf ${libevent_archive} \\
    && rm ${libevent_archive} ${libevent_archive}.sha256
RUN curl -o ${tmux_archive} -sSL "https://github.com/nuimk/nmk-tmux/releases/download/${tmux_tag}/${tmux_archive}" \\
    && sha256sum -c ${tmux_archive}.sha256 \\
    && tar -xf ${tmux_archive} \\
    && rm ${tmux_archive} ${tmux_archive}.sha256
RUN curl -o ${zsh_archive} -sSL "https://github.com/zsh-users/zsh/archive/${zsh_archive}" \\
    && sha256sum -c ${zsh_archive}.sha256 \\
    && tar -xf ${zsh_archive} \\
    && rm ${zsh_archive} ${zsh_archive}.sha256
RUN curl -o ${htop_archive} -sSL "https://github.com/htop-dev/htop/archive/refs/tags/${htop_version}.tar.gz" \\
    && sha256sum -c ${htop_archive}.sha256 \\
    && tar -xf ${htop_archive} \\
    && rm ${htop_archive} ${htop_archive}.sha256
EOF

if [ "$distro" = debian ]; then
cat << EOF
RUN apt-get -yq update \\
    && apt-get -yq build-dep libpcre3 \\
    && apt-get -yq source libncursesw6 libpcre3
EOF
fi

cat << EOF
COPY entrypoint /
ENTRYPOINT ["/entrypoint"]
EOF
}

generate_context_dir() {
    local distro=$1
    local version=$2
    local target=../context/$distro-$version
    local dockerfile=$target/Dockerfile
    rm -rf $target
    mkdir -p $target
    print "FROM $distro:$version" > $dockerfile
    print "ENV DOCKER_TAG=${distro}-${version}\n" >> $dockerfile
    <Dockerfile.$distro >> $dockerfile
    build_context $distro $version >> $dockerfile
    cp entrypoint *.sha256 *.sh $target
}
debian_versions=(10 11 12)
for v in $debian_versions; do
    generate_context_dir debian $v
done

ubuntu_versions=(14.04 16.04 18.04 20.04 22.04 24.04)
for v in $ubuntu_versions; do
    generate_context_dir ubuntu $v
done

# We only support centos-7
centos_versions=(
    7.5.1804
    7.6.1810
    7.7.1908
    7.8.2003
    7.9.2009
)
for v in $centos_versions; do
    generate_context_dir centos $v
done

amazonlinux_versions=(1 2 2023)
for v in $amazonlinux_versions; do
    generate_context_dir amazonlinux $v
done

alpine_versions=(3.16 3.17 3.18 3.19)
for v in $alpine_versions; do
    generate_context_dir alpine $v
done

