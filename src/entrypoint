#!/bin/zsh
set -e

# Parse options {{{
usage() {
cat <<- EOU
Usage: [OPTIONS] PREFIX

Options
    --no-htop                 Dont't build htop
    --no-tmux                 Dont't build tmux
    --no-zsh                  Dont't build zsh
    -n, --name                Custom archive name
    -h, --help                print this help message
EOU
}

_OPTIONS=(
    help
    full
    no-htop
    no-tmux
    no-zsh
    name:
)

if ! _TEMP=$(POSIXLY_CORRECT=true getopt -q -o hn: --long ${(j:,:)_OPTIONS} -- "$@"); then
    # exit if error
    usage
    exit 1
fi

eval set -- $_TEMP

# Variables
_HTOP=true
_TMUX=true
_ZSH=true
_NAME=
# include share library in final tar
_FULL=false

_CORES=1
# _CORES=$(nproc)

while true; do
    case $1 in
        --no-htop ) _HTOP=false; shift ;;
        --no-tmux ) _TMUX=false; shift ;;
        --no-zsh ) _ZSH=false; shift ;;
        --full ) _FULL=true; shift ;;
        -n | --name ) _NAME=$2; shift 2;;
        -h | --help ) usage; exit 0 ;;
        -- ) shift; break ;;
    esac
done
# }}}


if [[ ! -n $1 ]]; then
    usage
    exit 1
fi

is_debian_based=false
if command -v apt-get > /dev/null 2>&1; then
    is_debian_based=true
fi

PREFIX=$1
cd /build

set -x

if [[ $_HTOP == true ]]; then
    cd $HTOP_BUILD_DIR
    ./autogen.sh
    ./configure --prefix=$PREFIX
    make -j $_CORES
    make install-strip
    cd ..
fi

if [[ $_TMUX == true ]]; then
    cd $LIBEVENT_BUILD_DIR
    ./configure --prefix=$PREFIX --enable-shared
    make -j $_CORES
    make install
    cd ..

    cd $TMUX_BUILD_DIR
    tmux_static_flags=
    if [[ $is_debian_based == true ]]; then
        tmux_static_flags=--enable-static
    fi
    PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig ./configure --prefix=$PREFIX --disable-dependency-tracking $tmux_static_flags
    make -j $_CORES
    make install-strip
    cd ..

    if [[ -n "$tmux_static_flags" ]]; then
        # remove it because we use static build
        cd $LIBEVENT_BUILD_DIR
        make uninstall
        cd ..
    fi
fi

if [[ $_ZSH == true ]]; then
    # install ncurse if neccessary (on debian)
    ncurse_dir=$(find . -mindepth 1 -maxdepth 1 -name 'ncurse*' -type d)
    if [ -d "$ncurse_dir" ]; then
        cd $ncurse_dir
            # --build=x86_64-linux-gnu \
            # --with-pkg-config-libdir=/usr/lib/x86_64-linux-gnu/pkgconfig \
            # --with-install-prefix=/<<PKGBUILDDIR>>/debian/tmp \
            # --libdir=/usr/lib/x86_64-linux-gnu \
            # --mandir=/usr/share/man \
            # --without-shared \
            # --disable-widec \
            # --without-gpm
        ./configure \
            --prefix=$PREFIX \
            --with-shared \
            --with-manpage-format=normal \
            --without-profile \
            --without-debug \
            --disable-rpath \
            --enable-echo \
            --disable-stripping \
            --enable-const \
            --enable-pc-files \
            --without-ada \
            --without-tests \
            --without-progs \
            --with-gpm \
            --enable-symlinks \
            --disable-setuid-environ \
            --disable-root-access \
            --disable-termcap \
            --with-default-terminfo-dir=/etc/terminfo \
            --with-terminfo-dirs="/etc/terminfo:/lib/terminfo:/usr/share/terminfo" \
            --with-ticlib=tic \
            --with-termlib=tinfo \
            --with-versioned-syms \
            --disable-wattr-macros \
            --disable-relink \
            --disable-pkg-ldflags \
            --enable-overwrite \
            --enable-widec \
            --with-xterm-kbs=del
        make -j $_CORES
        make install
        cd ..
    fi

    pcre_dir=$(find . -mindepth 1 -maxdepth 1 -name 'pcre3*' -type d)
    if [ -d "$pcre_dir" ]; then
        cd $pcre_dir
        autoreconf -f -i
        ./configure --prefix=$PREFIX \
            --with-shared \
            --enable-utf8 \
            --enable-unicode-properties \
            --disable-silent-rules \
            --enable-jit \
            --enable-pcre16 \
            --enable-pcre32
        make -j $_CORES
        make install
        cd ..
    fi

    cd $ZSH_BUILD_DIR
    ./Util/preconfig

    # FYI: If you compile for local system
    # remove --disable-dynamic and remove statically link
    PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig ./configure --prefix=$PREFIX \
        --disable-ansi2knr \
        --disable-dependency-tracking \
        --disable-dynamic \
        --enable-cap \
        --enable-function-subdirs \
        --enable-maildir-support \
        --enable-max-jobtable-size=256 \
        --enable-pcre \
        --enable-readnullcmd=pager \
        --with-tcsetpgrp \
        --with-term-lib="ncursesw tinfo"

    # statically link additional modules
    nmk_zsh_static_modules=(
        # required
        regex
        zpty
        # add to match link=dynamic
        attr
        cap
        clone
        curses
        deltochar
        example
        files
        mapfile
        mathfunc
        nearcolor
        newuser
        param_private
        pcre
        socket
        stat
        system
        tcp
        zftp
        zprof
        zselect
    )
    for module ($nmk_zsh_static_modules) {
        sed -i -E "s/(.*)${module}.mdd link=no(.*)/\1${module}.mdd link=static\2/" config.modules
    }
    cat config.modules
    make -j $_CORES
    make STRIPFLAGS="-s" install.bin install.fns
    cd ..

    # uninstall dependencies
    if [[ $_FULL == false ]]; then
        if [[ -d "$ncurse_dir" ]]; then
            cd $ncurse_dir
            make uninstall
            cd ..
        fi
        if [[ -d "$pcre_dir" ]]; then
            cd $pcre_dir
            make uninstall
            cd ..
        fi
    fi

    # remove lib dir if there is no files
    lib_dir=$PREFIX/lib
    files_in_lib="$(find $lib_dir -type f)"
    if [[ $#files_in_lib -eq 0 ]]; then
        rm -rf $lib_dir
    fi
fi

cd $PREFIX
tar caf /local.tar --exclude='*.la' --exclude='*.a' *
if [[ -d /workspace ]]; then
    if [[ -n $_NAME ]]; then
        cp /local.tar /workspace/$_NAME.tar
        xz -kf /workspace/$_NAME.tar
    else
        cp /local.tar /workspace
    fi
fi

